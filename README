
SHIBUI
=========================================

Fairly simple hashmap implementation built on top of an epoll TCP server. A toy
project just for learning purpose, fascinated by the topic, i decided to try to
make a simpler version of redis/memcached to better understand how it works.
The project is a minimal Redis-like implementation with a text based protocol,
    and like Redis, can be used as key-value in-memory store.


Currently supports some basic operations, all commands are case insensitive, so
not strictly uppercase.

- SET key value               Sets <key> to <value>
- GET key                     Get the value identified by <key>
- DEL key key2 .. keyN        Delete values identified by <key>..<keyN>
- INC key qty                 Increment by <qty> the value idenfied by <key>, if
                              no <qty> is specified increment by 1
- DEC key qty                 Decrement by <qty> the value idenfied by <key>, if
                              no <qty> is specified decrement by 1
- INCF key qty                Increment by float <qty> the value identified by <key>,
                              if no <qty> is specified increment by 1.0
- DECF key qty                Decrement by <qty> the value identified by <key>,
                              if no <qty> is specified decrement by 1.0
- GETP key                    Get all information of a key-value pair represented by
                              <key>, like key, value, creation time and expire time
- APPEND key value            Append <value> to <key>
- PREPEND key value           Prepend <value> to <key>
- EXPIRE key ms               Set an expire time in milliseconds after that the <key>
                              will be deleted, upon taking -1 as <ms> value the
                              expire time will be removed
- TTL key                     Return the Time-To-Live of the <key> in seconds
- KEYS                        List all keys stored into the keyspace
- VALUES                      List all values stored into the keyspace
- COUNT                       Return the number of key-value pair stored
- FLUSH                       Delete all maps stored inside partitions
- QUIT/EXIT                   Close connection


* DISTRIBUTION
=========================================

Still in development and surely bugged, it currently supports some commands in
a distributed context.

* BUILD
=========================================

To build the source just run make. A shibui executable will be generated that
can be started to listen on a defined hostname, ready to receive commands from any
TCP client

    $ ./shibui -a <hostname> -p <port>

-m define master node in a distributed context

    $ ./shibui -a <hostname> -p <port> -m

Parameter <hostname> and <port> fallback to 127.0.0.1 and 6737, shibui can also be
started as a slave node by specifying the master

    $ ./shibui -a <master-hostname> -p <port> -s

Currently it support just a basic connection between nodes, no routing for commands
have been developed yet.
To build shibui-cli just make shibui-cli and run it like the following:

    $ ./shibui-cli <hostname> <port>


